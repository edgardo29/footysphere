# Visible name in GitHub Actions UI
name: etl-ci

on:
  # Run CI on PRs that touch only ETL or this workflow file
  pull_request:
    paths:
      - 'etl/**'
      - '.github/workflows/etl-ci.yml'
  # Also run post-merge on main when ETL changes land
  push:
    branches: [ main ]
    paths:
      - 'etl/**'
      - '.github/workflows/etl-ci.yml'

jobs:
  etl:
    # Ubuntu runner is fine for pure Python checks
    runs-on: ubuntu-latest

    steps:
      # 1) Fetch repo so we can read files
      - name: Check out repository
        uses: actions/checkout@v4

      # 2) Pin Python version (adjust if your ETL needs a different minor)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3) Install ETL dependencies
      #    NOTE: we keep your current file path/name. Change if yours differs.
      - name: Install ETL dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r etl/requirements_etl.txt

      # 4) Fast failure: compile all ETL .py files to catch syntax errors
      #    - Skips test_scripts (these may require live env/creds)
      #    - No imports with side effects; this is a pure bytecode compile
      - name: Syntax compile (no side effects)
        run: |
          python - <<'PY'
          import pathlib, py_compile, sys
          root = pathlib.Path('etl')
          failed = []
          for p in root.rglob('*.py'):
              parts = set(p.parts)
              if 'test_scripts' in parts or '__pycache__' in parts:
                  continue
              try:
                  py_compile.compile(str(p), doraise=True)
              except Exception as e:
                  failed.append((str(p), e))
          if failed:
              for f, e in failed:
                  print(f"ERROR: {f}: {e}", file=sys.stderr)
              sys.exit(1)
          print("All ETL Python files compile.")
          PY
